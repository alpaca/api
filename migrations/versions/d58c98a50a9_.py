"""empty message

Revision ID: d58c98a50a9
Revises: 23e20e98fe65
Create Date: 2014-04-28 18:55:41.798663

"""

# revision identifiers, used by Alembic.
revision = 'd58c98a50a9'
down_revision = '23e20e98fe65'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('facebook_pages_users',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('uid', sa.BigInteger(), nullable=False),
    sa.Column('created_time', sa.Date(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('page_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['page_id'], ['facebook_pages.page_id'], ),
    sa.ForeignKeyConstraint(['uid'], ['facebook_users.uid'], ),
    sa.PrimaryKeyConstraint('uid', 'page_id')
    )
    op.drop_table('contributors')
    op.drop_table('facebook_friends')
    op.drop_table('facebook_families')
    op.drop_table('facebook_locations')
    op.drop_table('facebook_statuses')
    op.drop_table('facebook_categories_pages')
    op.drop_constraint(u'facebook_pages_page_id_key', 'facebook_pages')
    op.drop_index('facebook_pages_page_id_key', table_name='facebook_pages')
    op.drop_constraint(u'facebook_users_uid_key', 'facebook_users')
    op.drop_index('facebook_users_uid_key', table_name='facebook_users')
    op.drop_constraint(u'twitter_tweets_id_key', 'twitter_tweets')
    op.drop_index('twitter_tweets_id_key', table_name='twitter_tweets')
    op.drop_constraint(u'twitter_users_id_key', 'twitter_users')
    op.drop_index('twitter_users_id_key', table_name='twitter_users')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_index('twitter_users_id_key', 'twitter_users', ['id'], unique=True)
    op.create_unique_constraint(u'twitter_users_id_key', 'twitter_users', ['id'])
    op.create_index('twitter_tweets_id_key', 'twitter_tweets', ['id'], unique=True)
    op.create_unique_constraint(u'twitter_tweets_id_key', 'twitter_tweets', ['id'])
    op.create_index('facebook_users_uid_key', 'facebook_users', ['uid'], unique=True)
    op.create_unique_constraint(u'facebook_users_uid_key', 'facebook_users', ['uid'])
    op.create_index('facebook_pages_page_id_key', 'facebook_pages', ['page_id'], unique=True)
    op.create_unique_constraint(u'facebook_pages_page_id_key', 'facebook_pages', ['page_id'])
    op.create_table('facebook_categories_pages',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('page_id', sa.BIGINT(), server_default="nextval('facebook_categories_pages_page_id_seq'::regclass)", nullable=False),
    sa.PrimaryKeyConstraint('category', 'page_id', name=u'facebook_categories_pages_pkey')
    )
    op.create_table('facebook_statuses',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('like_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('uid', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('status_id', sa.BIGINT(), server_default="nextval('facebook_statuses_status_id_seq'::regclass)", nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('time', sa.DATE(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('status_id', name=u'facebook_statuses_pkey')
    )
    op.create_table('facebook_locations',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('loc_id', sa.BIGINT(), server_default="nextval('facebook_locations_loc_id_seq'::regclass)", nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('zip', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('longitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('street', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('latitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gid', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('loc_id', name=u'facebook_locations_pkey')
    )
    op.create_table('facebook_families',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('uid', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('relationship', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('profile_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], [u'facebook_users.uid'], name=u'facebook_families_profile_id_fkey'),
    sa.ForeignKeyConstraint(['uid'], [u'facebook_users.uid'], name=u'facebook_families_uid_fkey'),
    sa.PrimaryKeyConstraint('uid', 'profile_id', name=u'facebook_families_pkey')
    )
    op.create_table('facebook_friends',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('uid2', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('uid1', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['uid1'], [u'facebook_users.uid'], name=u'facebook_friends_uid1_fkey'),
    sa.ForeignKeyConstraint(['uid2'], [u'facebook_users.uid'], name=u'facebook_friends_uid2_fkey'),
    sa.PrimaryKeyConstraint('uid2', 'uid1', name=u'facebook_friends_pkey')
    )
    op.create_table('contributors',
    sa.Column('cycle', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('transaction_namespace', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('transaction_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('transaction_type_description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('filing_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_amendment', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contributor_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contributor_ext_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contributor_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contributor_occupation', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contributor_employer', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contributor_gender', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contributor_address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contributor_city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contributor_state', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contributor_zipcode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contributor_category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('organization_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('organization_ext_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('parent_organization_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('parent_organization_ext_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('recipient_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('recipient_ext_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('recipient_party', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('recipient_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('recipient_state', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('recipient_state_held', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('recipient_category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('committee_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('committee_ext_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('committee_party', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('candidacy_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('district', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('district_held', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('seat', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('seat_held', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('seat_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('seat_result', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('facebook_username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('linkedin_username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('twitter_username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('transaction_id', name=u'contributors_pkey')
    )
    op.drop_table('facebook_pages_users')
    ### end Alembic commands ###
